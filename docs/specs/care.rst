.. _noi.specs.care:

====================================
Lino Care, a social ticketing system
====================================

.. How to test only this document:

    $ python setup.py test -s tests.SpecsTests.test_care
    
    doctest init:

    >>> from lino import startup
    >>> startup('lino_noi.projects.care.settings.doctests')
    >>> from lino.api.doctest import *

.. contents::
  :local:



Overview
========

**Lino Care** is a variant of :ref:`noi` specialized for organizations
who help people caring for each other.  These might be old people,
orphans, immigrants, disabled, addicts, or just "normal" people
without any handicap.

While :ref:`noi` was originally used as a ticketing system for the
:ref:`Lino team <lino.team>` and other open source software teams, we
realized that we can use almost the same concepts for managing "social
tickets".  A different context, but a similar database structure.  In
:ref:`care` we just don't call them "tickets" but "pleas" (German
"Bitten").


Design choices
==============

- Users do not actually need to access the Lino site. It is possible
  that a "**connector**" does the job of entering the information into
  Lino in behalf of the actual user.

- There is no difference between **care recipients** and **care
  providers**.  Both are stored as *system users*.  Any user can "call
  for help" by "opening a plea".

- The site maintains a catalogue of faculties_. This is a
  classification of the "needed services or things" which will make
  the connection recipient and provider. For example things like
  "table" or "a pair of shoes", or services like "Baby sitting",
  "English teaching" or "Pedicure".

  Every user can enter information about their **competences** and
  their **availability**.

- The application protects privacy of all users as much as possible.
  Neither providers nor recipients are listed publicly. All users must
  be confirmed after registration. There is a manager (one person or a
  team of several users) who does this job. The manager can see all
  users and their data.

- The care recipients can create new tickets and enter information
  about what kind of care they need. They cannot see who is going to
  help them. They cannot even see whether somebody is available at all
  for a given type of care.

- The care providers can see the incoming help requests for the kind
  of thing or service they provide. They can see the contact data of
  the user who asks for help.

  When they receive a notification about a help request, they must
  give feedback, e.g. they can *refuse* it (possibly specifying a
  reason like "I am not available" or "Request does not fit to what I
  can give").  If they decide to contact that person, then they should
  register this to the database: date and time of contact, a field for
  remarks, and (important) whether they decided to "take the ticket"
  or not after speaking with the recipient.

- Depending on the nature of the "service or thing", there must
  probably be additional information.


Implementation
==============

Lino Care is technically a sub-project of Lino Noi. It does not have a
Git repository on its own.  Everything specific to Lino Care is in
:mod:`lino_noi.projects.care` and below.

The demo data for :ref:`care` is mostly being generated by
:mod:`lino_noi.projects.care.lib.tickets.fixtures.demo`.


Users
=====

These user roles are defined in :mod:`lino_noi.projects.care.roles`

>>> rt.show('users.UserTypes')
======= =========== ===============
 value   name        text
------- ----------- ---------------
 000     anonymous   Anonymous
 100     user        User
 500     connector   Connector
 900     admin       Administrator
======= =========== ===============
<BLANKLINE>


>>> rt.show('users.Users')
========== =============== ============ ===========
 Username   User type       First name   Last name
---------- --------------- ------------ -----------
 alex       User
 berta      User
 christa    User
 dora       User
 eric       Connector
 robin      Administrator   Robin        Rood
 rolf       Administrator   Rolf         Rompen
 romain     Administrator   Romain       Raffault
========== =============== ============ ===========
<BLANKLINE>



Faculties
=========

She site has a list of **faculties**, i.e. the "needed services or
things" which will make the connection between recipient and provider
of help.

Every ticket can require a given faculty.  When assigning a worker to
such a ticket, Lino will suggest only users having a competence for
this faculty.

A faculty is something a user must be able to do in order to work on
this ticket.


Their actual name can be locally configured by setting the
verbose_name and verbose_name_plural options of `faculties.Faculty`.

>>> rt.show(faculties.AllFaculties)
... #doctest: +REPORT_UDIFF
========================== ============================= ============================ ========== ================== ================
 Designation                Designation (de)              Designation (fr)             Affinity   Options category   Parent faculty
-------------------------- ----------------------------- ---------------------------- ---------- ------------------ ----------------
 Babysitting                Babysitting                   Garde enfant                 100
 Car driving                Fahrdienst                    Voiture                      100
 French lessons             Französischunterricht         Cours de francais            100                           Teaching
 Garden works               Gartenarbeiten                Travaux de jardin            100                           Home & Garden
 German lessons             Deutschunterricht             Cours d'allemand             100                           Teaching
 Go out with dogs           Hunde spazierenführen         Chiens                       100
 Guitar lessons             Gitarrenunterricht            Cours de guitare             100                           Music
 Hair cutting               Friseur                       Coiffure                     100
 Home & Garden              Haus und Garten               Maison et jardin             100
 Maths lessons              Matheunterricht               Cours de maths               100                           Teaching
 Mentoring elderly people   Gesellschafter für Senioren   Rencontres personnes agées   100
 Music                      Musik                         Musique                      100
 Piano lessons              Klavierunterricht             Cours de piano               100                           Music
 Renovation                 Renovierung                   Rénovation                   100                           Home & Garden
 Repair works               Reparaturarbeiten             Travaux de réparation        100                           Home & Garden
 Repairing clothes          Kleider reparieren            Réparer des vètements        100                           Home & Garden
 Shopping                   Botengänge                    Commissions                  100
 Teaching                   Unterricht                    Cours                        100
 Translations               Übersetzungsarbeiten          Traductions                  100        Languages
 Write letters              Briefe schreiben              Écrire des lettres           100
 **Total (20 rows)**                                                                   **2000**
========================== ============================= ============================ ========== ================== ================
<BLANKLINE>


>>> rt.show(faculties.TopLevelFaculties)
... #doctest: +REPORT_UDIFF
========================== ============================= ============================ ==== =================================================================== ================
 Designation                Designation (de)              Designation (fr)             ID   Children                                                            Parent faculty
-------------------------- ----------------------------- ---------------------------- ---- ------------------------------------------------------------------- ----------------
 Babysitting                Babysitting                   Garde enfant                 16
 Car driving                Fahrdienst                    Voiture                      13
 Go out with dogs           Hunde spazierenführen         Chiens                       18
 Hair cutting               Friseur                       Coiffure                     15
 Home & Garden              Haus und Garten               Maison et jardin             8    *Garden works*, *Renovation*, *Repair works*, *Repairing clothes*
 Mentoring elderly people   Gesellschafter für Senioren   Rencontres personnes agées   17
 Music                      Musik                         Musique                      5    *Guitar lessons*, *Piano lessons*
 Shopping                   Botengänge                    Commissions                  14
 Teaching                   Unterricht                    Cours                        1    *French lessons*, *German lessons*, *Maths lessons*
 Translations               Übersetzungsarbeiten          Traductions                  19
 Write letters              Briefe schreiben              Écrire des lettres           20
========================== ============================= ============================ ==== =================================================================== ================
<BLANKLINE>


>>> rt.show('faculties.Competences')
==== ========= ================ ========== ========
 ID   User      Faculty          Affinity   Option
---- --------- ---------------- ---------- --------
 1    alex      Translations     100        French
 2    berta     Translations     100        French
 3    berta     Translations     100        German
 4    alex      Garden works     100
 5    alex      Repair works     100
 6    christa   Piano lessons    100
 7    eric      Guitar lessons   100
                                 **700**
==== ========= ================ ========== ========
<BLANKLINE>

>>> rt.show('topics.Topics')
=========== ============= ================== ================== =============
 Reference   Designation   Designation (de)   Designation (fr)   Topic group
----------- ------------- ------------------ ------------------ -------------
             French        Französisch        Français           Languages
             German        Deutsch            Allemand           Languages
             English       Englisch           Anglais            Languages
=========== ============= ================== ================== =============
<BLANKLINE>

>>> rt.show('tickets.Tickets')
==== ========================================================================= ========== ======= ================ ============ =========
 ID   Summary                                                                   Reporter   Topic   Faculty          Actions      Project
---- ------------------------------------------------------------------------- ---------- ------- ---------------- ------------ ---------
 8    Who would buy diapers for me in Aachen?                                   alex               Shopping         **New**
 7    Who can review my final work?                                             dora                                **Opened**
 6    Who helps my sont to prepare for a maths test on May 21? (5. grade PDS)   berta              Maths lessons    **New**
 5    Who would play music on my birthday party?                                alex               Music            **New**
 4    Who can give guitar lessons to my daughter?                               alex               Guitar lessons   **Talk**
 3    Who can give piano lessons to my son?                                     dora               Piano lessons    **New**
 2    My lawn needs mowing. On Thursday or Saturday.                            christa                             **New**
 1    My faucet is dripping, who can help?                                      berta              Repair works     **New**
==== ========================================================================= ========== ======= ================ ============ =========
<BLANKLINE>

TODO: show how the choices for Ticket.assigned_to depend on faculty
and topic.

The main menu
=============

>>> rt.login('robin').show_menu()
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
- Office : My Votes, My Excerpts, My Comments, My Notification messages
- Pleas : My Pleas, Where I can help, Pleas to to, Active pleas, All pleas, Unassigned pleas, Active projects
- Reports :
  - System : Broken GFKs
- Configure :
  - System : Site Parameters, Help Texts, Users
  - Places : Countries, Places
  - Topics : Topics, Topic groups
  - Office : Excerpt Types
  - Pleas : Projects, Projects (tree), Project Types, Ticket types, Sites
  - Faculties : Faculties (tree), Faculties (all)
- Explorer :
  - System : content types, Authorities, User types, Notification messages, Changes
  - Topics : Interests
  - Pleas : Votes, Vote states, Dependencies, States
  - Office : Excerpts, Comments
  - Faculties : Competences
- Site : About


**Simple** users have a very limited menu:

>>> rt.login('berta').show_menu()
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
- Office : My Votes, My Excerpts, My Comments, My Notification messages
- Pleas : My Pleas, Where I can help, Pleas to to
- Site : About

Lists of pleas
==============


My pleas
--------

  
>>> rt.login('christa').show(tickets.MyTickets)
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
================================================================== ========= ======= ===========================
 Overview                                                           Faculty   Topic   Actions
------------------------------------------------------------------ --------- ------- ---------------------------
 `#2 (My lawn needs mowing. On Thursday or Saturday.) <Detail>`__                     [☆] **New** → [☎] [☉] [☐]
================================================================== ========= ======= ===========================
<BLANKLINE>


Where I can help
----------------

>>> rt.login('christa').show(tickets.SuggestedTickets)
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
============================================================== ========== ======= =============== =============
 Overview                                                       Reporter   Topic   Faculty         Actions
-------------------------------------------------------------- ---------- ------- --------------- -------------
 `#5 (Who would play music on my birthday party?) <Detail>`__   alex               Music           [☆] **New**
 `#3 (Who can give piano lessons to my son?) <Detail>`__        dora               Piano lessons   [☆] **New**
============================================================== ========== ======= =============== =============
<BLANKLINE>


My to-do list
-------------

>>> rt.login('christa').show(tickets.TicketsToDo)
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
No data to display


Rating a help offer
===================

>>> base = '/choices/votes/Votes/rating'
>>> show_choices("robin", base + '?query=')
<br/>
Very good
Good
Satisfying
Deficient
Insufficient
Unratable


The detail layout of a ticket
=============================

Here is a textual description of the fields and their layout used in
the detail window of a ticket.

>>> from lino.utils.diag import py2rst
>>> print(py2rst(tickets.Tickets.detail_layout, True))
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF -SKIP
(main) [visible for all]:
- **General** (general):
  - (general_1):
    - (general1):
      - (general1_1): **Summary** (summary), **ID** (id), **Deadline** (deadline)
      - (general1_2): **Reporter** (reporter), **Faculty** (faculty), **Topic** (topic)
      - (general1_3): **Site** (site), **Actions** (workflow_buttons)
    - **Assignable workers** (faculties.AssignableWorkersByTicket) [visible for connector admin]
  - (general_2): **Description** (description), **Comments** (CommentsByRFC) [visible for user connector admin]
- **History** (changes.ChangesByMaster) [visible for connector admin]
- **Votes** (votes.VotesByVotable) [visible for user connector admin]
- **More** (more) [visible for connector admin]:
  - (more1) [visible for all]:
    - (more1_1): **Created** (created), **Modified** (modified), **Ticket type** (ticket_type)
    - (more1_2): **State** (state), **Priority** (priority), **Project** (project)
  - (more_2) [visible for all]: **Solution** (upgrade_notes), **Dependencies** (LinksByTicket) [visible for connector admin]
<BLANKLINE>


Topic groups
============


>>> show_menu_path(topics.TopicGroups, language='en')
Configure --> Topics --> Topic groups

>>> rt.show(topics.TopicGroups)
==== ============= ================== ================== =============
 ID   Designation   Designation (de)   Designation (fr)   Description
---- ------------- ------------------ ------------------ -------------
 1    Languages     Sprachen           Langues
==== ============= ================== ================== =============
<BLANKLINE>


Configuring your preferences
============================

>>> show_choices('alex', '/choices/faculties/CompetencesByUser/faculty')
Babysitting
Car driving
French lessons
Garden works
German lessons
Go out with dogs
Guitar lessons
Hair cutting
Home & Garden
Maths lessons
Mentoring elderly people
Music
Piano lessons
Renovation
Repair works
Repairing clothes
Shopping
Teaching
Translations
Write letters
